if (A[i,j] < 0)    {
nthroot(abs(A[i,j]), 3)
} else if (is_prime(A[i,j]))    {
numtransf = A[i,j] * 9
} else if (round(sqrt(A[i,j])))
{
numtransf = A[i,j]
if (numtransf < 0)
{
numtransf = numtransf ** 3
}
} else{
numtransf = A[i,j]
}
print(paste("pos = ", numtransf))
}
}
nthroot(x = abs(A[i,j]), n = 3)
numtemporario = abs(A[i,j])
numtemporario = abs(A[i,j])
require(primes)
require(pracma)
A <- matrix(
c(08, -2, -6, 09, 03, 06, 10, -3, 0),
byrow = TRUE,
nrow = 3,
ncol = 3
)
A
i <- 1
j <- 1
for (i in 1:3) {
print(paste("i = ", i))
for (j in 1:3) {
print(paste("j = ", j))
numtransf = 0
print(paste("num = ", A[i,j]))
if (A[i,j] < 0)    {
numtemporario = abs(A[i,j])
print(paste("absoluto = ", numtemporario))
#nthroot(x = abs(A[i,j]), n = 3)
} else if (is_prime(A[i,j]))    {
numtransf = A[i,j] * 9
} else if (round(sqrt(A[i,j])))
{
numtransf = A[i,j]
if (numtransf < 0)
{
numtransf = numtransf ** 3
}
} else{
numtransf = A[i,j]
}
print(paste("pos = ", numtransf))
}
}
require(primes)
require(pracma)
A <- matrix(
c(08, -2, -6, 09, 03, 06, 10, -3, 0),
byrow = TRUE,
nrow = 3,
ncol = 3
)
A
i <- 1
j <- 1
for (i in 1:3) {
print(paste("i = ", i))
for (j in 1:3) {
print(paste("j = ", j))
numtransf = 0
print(paste("num = ", A[i,j]))
if (A[i,j] < 0)    {
numtemporario = abs(A[i,j])
print(paste("absoluto = ", numtemporario))
nthroot(x = numtemporario, n = 3)
} else if (is_prime(A[i,j]))    {
numtransf = A[i,j] * 9
} else if (round(sqrt(A[i,j])))
{
numtransf = A[i,j]
if (numtransf < 0)
{
numtransf = numtransf ** 3
}
} else{
numtransf = A[i,j]
}
print(paste("pos = ", numtransf))
}
}
require(primes)
require(pracma)
A <- matrix(
c(08, -2, -6, 09, 03, 06, 10, -3, 0),
byrow = TRUE,
nrow = 3,
ncol = 3
)
A
i <- 1
j <- 1
for (i in 1:3) {
print(paste("i = ", i))
for (j in 1:3) {
print(paste("j = ", j))
numtransf = 0
print(paste("num = ", A[i,j]))
if (A[i,j] < 0)    {
numtemporario = abs(A[i,j])
print(paste("absoluto = ", numtemporario))
numtransf = nthroot(x = numtemporario, n = 3)
} else if (is_prime(A[i,j]))    {
numtransf = A[i,j] * 9
} else if (round(sqrt(A[i,j])))
{
numtransf = A[i,j]
if (numtransf < 0)
{
numtransf = numtransf ** 3
}
} else{
numtransf = A[i,j]
}
print(paste("pos = ", numtransf))
}
}
require(primes)
require(pracma)
A <- matrix(
c(08, -2, -6, 09, 03, 06, 10, -3, 0),
byrow = TRUE,
nrow = 3,
ncol = 3
)
A
i <- 1
j <- 1
for (i in 1:3) {
print(paste("i = ", i))
for (j in 1:3) {
print(paste("j = ", j))
numtransf = 0
print(paste("num = ", A[i,j]))
if (A[i,j] < 0)    {
numtemporario = abs(A[i,j])
#print(paste("absoluto = ", numtemporario))
numtransf = nthroot(x = numtemporario, n = 3)
} else if (is_prime(A[i,j]))    {
numtransf = A[i,j] * 9
} else if (round(sqrt(A[i,j])))
{
numtransf = A[i,j]
if (numtransf < 0)
{
numtransf = numtransf ** 3
}
} else{
numtransf = A[i,j]
}
print(paste("pos = ", numtransf))
}
}
require(primes)
require(pracma)
A <- matrix(
c(08, -2, -6, 09, 03, 06, 10, -3, 0),
byrow = TRUE,
nrow = 3,
ncol = 3
)
A
i <- 1
j <- 1
for (i in 1:3) {
print(paste("i = ", i))
for (j in 1:3) {
print(paste("j = ", j))
numtransf = 0
print(paste("num = ", A[i,j]))
if (A[i,j] < 0)    {
numtemporario = abs(A[i,j])
#print(paste("absoluto = ", numtemporario))
numtransf = nthroot(x = numtemporario, n = 3)
} else if (is_prime(A[i,j]))    {
numtransf = A[i,j] * 9
} else if (is.wholenumber(sqrt(A[i,j])))
{
numtransf = A[i,j]
if (numtransf < 0)
{
numtransf = numtransf ** 3
}
} else{
numtransf = A[i,j]
}
print(paste("pos = ", numtransf))
}
}
install.packages("ds4psy")
require(ds4psy)
require(primes)
require(pracma)
require(ds4psy)
A <- matrix(
c(08, -2, -6, 09, 03, 06, 10, -3, 0),
byrow = TRUE,
nrow = 3,
ncol = 3
)
A
i <- 1
j <- 1
for (i in 1:3) {
print(paste("i = ", i))
for (j in 1:3) {
print(paste("j = ", j))
numtransf = 0
print(paste("num = ", A[i,j]))
if (A[i,j] < 0)    {
numtemporario = abs(A[i,j])
#print(paste("absoluto = ", numtemporario))
numtransf = nthroot(x = numtemporario, n = 3)
} else if (is_prime(A[i,j]))    {
numtransf = A[i,j] * 9
} else if (is.wholenumber(sqrt(A[i,j])))
{
numtransf = A[i,j]
if (numtransf < 0)
{
numtransf = numtransf ** 3
}
} else{
numtransf = A[i,j]
}
print(paste("pos = ", numtransf))
}
}
install.packages("FRACTION")
require(FRACTION)
require(primes)
require(pracma)
require(ds4psy)
require(FRACTION)
A <- matrix(
c(08, -2, -6, 09, 03, 06, 10, -3, 0),
byrow = TRUE,
nrow = 3,
ncol = 3
)
A
i <- 1
j <- 1
for (i in 1:3) {
print(paste("i = ", i))
for (j in 1:3) {
print(paste("j = ", j))
numtransf = 0
print(paste("num = ", A[i,j]))
if (A[i,j] < 0)    {
numtemporario = abs(A[i,j])
#print(paste("absoluto = ", numtemporario))
numtransf = nthroot(x = numtemporario, n = 3)
} else if (is_prime(A[i,j]))    {
numtransf = A[i,j] * 9
} else if (is.wholenumber(sqrt(A[i,j])))
{
numtransf = A[i,j]
if (numtransf < 0)
{
numtransf = numtransf ** 3
}
} else{
numtransf = A[i,j]
}
print(paste("pos = ", numtransf))
}
}
require(primes)
require(pracma)
require(ds4psy)
require(FRACTION)
A <- matrix(
c(08, -2, -6, 09, 03, 06, 10, -3, 0),
byrow = TRUE,
nrow = 3,
ncol = 3
)
A
i <- 1
j <- 1
for (i in 1:3) {
print(paste("i = ", i))
for (j in 1:3) {
print(paste("j = ", j))
numtransf = 0
print(paste("num = ", A[i,j]))
if (A[i,j] < 0)    {
numtemporario = abs(A[i,j])
#print(paste("absoluto = ", numtemporario))
numtransf = nthroot(x = numtemporario, n = 3)
} else if (is_prime(A[i,j]))    {
numtransf = A[i,j] * 9
} else if (is.wholenumber(sqrt(A[i,j])))
{
numtransf = A[i,j] - 4
if (numtransf < 0)
{
numtransf = numtransf ** 3
}
} else{
numtransf = A[i,j]
}
print(paste("pos = ", numtransf))
}
}
require(primes)
require(pracma)
require(ds4psy)
require(FRACTION)
A <- matrix(
c(08, -2, -6, 09, 03, 06, 10, -3, 0),
byrow = TRUE,
nrow = 3,
ncol = 3
)
A
i <- 1
j <- 1
for (i in 1:3) {
print(paste("i = ", i))
for (j in 1:3) {
print(paste("j = ", j))
numtransf = 0
print(paste("num = ", A[i,j]))
if (A[i,j] < 0)    {
numtemporario = abs(A[i,j])
#print(paste("absoluto = ", numtemporario))
numtransf = nthroot(x = numtemporario, n = 3)
} else if (is_prime(A[i,j]))    {
numtransf = A[i,j] * 9
} else if (is.wholenumber(sqrt(A[i,j])))
{
numtransf = A[i,j] - 4
if (numtransf < 0)
{
numtransf = numtransf ** 3
}
} else{
numtransf = A[i,j]
}
print(paste("pos = ", numtransf))
A[i,j] = numtransf
}
}
A
B <- matrix(c(20, 0, -3, 15,
16, 19, 8, 12,
3, 6, 5, 11,
-8, 18, -5, 10),
byrow = TRUE,
nrow = 4,
ncol = 4
)
B
i <- 1
j <- 1
for (i in 1:4) {
print(paste("i = ", i))
for (j in 1:4) {
print(paste("j = ", j))
numtransf = 0
print(paste("num = ", B[i,j]))
if (B[i,j] < 0)    {
numtemporario = abs(B[i,j])
#print(paste("absoluto = ", numtemporario))
numtransf = nthroot(x = numtemporario, n = 3)
} else if (is_prime(B[i,j]))    {
numtransf = B[i,j] * 9
} else if (is.wholenumber(sqrt(B[i,j])))
{
numtransf = B[i,j] - 4
if (numtransf < 0)
{
numtransf = numtransf ** 3
}
} else{
numtransf = B[i,j]
}
print(paste("pos = ", numtransf))
B[i,j] = numtransf
}
}
B
C <- matrix(c(-1, 30, 20, 7, 17,
29, -5, 18, 8, 22,
-10, -9, 2, 16, 27,
-7, -4, 1, 6, 12,
15, 26, 9, 19, -2),
byrow = TRUE,
nrow = 5,
ncol = 5
)
C
i <- 1
j <- 1
for (i in 1:5) {
print(paste("i = ", i))
for (j in 1:5) {
print(paste("j = ", j))
numtransf = 0
print(paste("num = ", C[i,j]))
if (C[i,j] < 0)    {
numtemporario = abs(C[i,j])
#print(paste("absoluto = ", numtemporario))
numtransf = nthroot(x = numtemporario, n = 3)
} else if (is_prime(C[i,j]))    {
numtransf = C[i,j] * 9
} else if (is.wholenumber(sqrt(C[i,j])))
{
numtransf = C[i,j] - 4
if (numtransf < 0)
{
numtransf = numtransf ** 3
}
} else{
numtransf = C[i,j]
}
print(paste("pos = ", numtransf))
C[i,j] = numtransf
}
}
C
sum(diag(A))
A
C
sum(C[,2])
B
contador = 0
for (i in 1:4) {
print(paste("i = ", i))
for (j in 1:4) {
if(is_prime(B[i,j])){
contador = contador +1
}
}
}
B
contador = 0
for (i in 1:4) {
for (j in 1:4) {
if(is_prime(B[i,j])){
contador = contador +1
}
}
}
contador
B
contador = 0
for (i in 1:4) {
for (j in 1:4) {
if(is_prime(B[i,j])){
print(paste("o numero ", B[i,j], "eh primo"))
contador = contador +1
}
}
}
contador
contador = 0
contador = 0
i <- 1
j <- 1
for (i in 1:3) {
for (j in 1:3) {
if (is.wholenumber(sqrt(A[i,j]))){
print(paste("o numero ", A[i,j], "eh primo"))
contador = contador +1
}
}
}
contador = 0
i <- 1
j <- 1
for (i in 1:3) {
for (j in 1:3) {
print(paste("num = ", A[i,j]))
if (is.wholenumber(sqrt(A[i,j]))){
print(paste("o numero ", A[i,j], "eh primo"))
contador = contador +1
}
}
}
install.packages("ggplot2")
require(ggplot2)
diamonds
diamantes2 <- filter(diamonds, diamonds$cut == "Fair")
diamantes2
count(diamantes2)
diamantes3 <- filter(diamonds, diamonds$color == "J", diamonds$clarity == SI2)
diamonds$clarity
diamantes3 <- filter(diamonds, diamonds$color == "J", diamonds$clarity == "SI2")
diamantes3
mean(diamantes3$price)
diamantes4 <- filter(diamonds, diamonds$carat > 1.4)
diamantes4
mean(diamantes4$price)
diamantes5 <- filter(diamonds, diamonds$color == "J", diamonds$clarity == "VS2", diamonds$carat > 2.9)
diamantes5
median(diamantes5)
median(diamantes5$price)
- Vari√¢ncia ("standartization")
