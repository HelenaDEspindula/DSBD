0.9460, 0.9461, 0.9459, 0.9464, 0.9462, 0.9466, 0.9466,
0.9465, 0.9471, 0.9466, 0.9467, 0.9463, 0.9467, 0.9469,
0.9465, 0.9474
)
knn_score <- c(
0.7532, 0.8995, 0.9194, 0.9252, 0.9354, 0.9333, 0.9363,
0.9369, 0.9367, 0.9368, 0.9394, 0.9400, 0.9403, 0.9425,
0.9431, 0.9445, 0.9450, 0.9459, 0.9458, 0.9450, 0.9451,
0.9452, 0.9478, 0.9496, 0.9506, 0.9511, 0.9517, 0.9516,
0.9518, 0.9513, 0.9516, 0.9516, 0.9531, 0.9527, 0.9536,
0.9533, 0.9531, 0.9532, 0.9533, 0.9541, 0.9544, 0.9538,
0.9538, 0.9540, 0.9541, 0.9547, 0.9544, 0.9542, 0.9552,
0.9557, 0.9560, 0.9560, 0.9555, 0.9558, 0.9553, 0.9556,
0.9554, 0.9557
)
gnb_score <- c(
0.6558, 0.8556, 0.8691, 0.8796, 0.8971, 0.8941, 0.8958,
0.8948, 0.8958, 0.9001, 0.8988, 0.9001, 0.8984, 0.8993,
0.8995, 0.8977, 0.9017, 0.9004, 0.9018, 0.9031, 0.9078,
0.9074, 0.9097, 0.9088, 0.9097, 0.9109, 0.9109, 0.9112,
0.9112, 0.9112, 0.9109, 0.9111, 0.9115, 0.9110, 0.9118,
0.9115, 0.9105, 0.9106, 0.9109, 0.9113, 0.9106, 0.9108,
0.9109, 0.9117, 0.9119, 0.9122, 0.9125, 0.9111, 0.9115,
0.9112, 0.9121, 0.9118, 0.9120, 0.9124, 0.9120, 0.9118,
0.9119, 0.9121
)
lda_score <- c(
0.7908, 0.9055, 0.9169, 0.9182, 0.9275, 0.9295, 0.9305,
0.9325, 0.9319, 0.9316, 0.9330, 0.9338, 0.9336, 0.9343,
0.9334, 0.9335, 0.9330, 0.9339, 0.9343, 0.9341, 0.9338,
0.9334, 0.9334, 0.9336, 0.9344, 0.9349, 0.9355, 0.9349,
0.9346, 0.9345, 0.9348, 0.9350, 0.9351, 0.9352, 0.9349,
0.9355, 0.9356, 0.9358, 0.9360, 0.9357, 0.9357, 0.9358,
0.9351, 0.9353, 0.9349, 0.9350, 0.9348, 0.9352, 0.9353,
0.9358, 0.9358, 0.9361, 0.9354, 0.9359, 0.9355, 0.9359,
0.9357, 0.9354
)
## tempo
lr_tempo <- c(
0.1580, 0.2674, 0.5048, 0.397, 0.3819, 0.4371,
0.5025, 0.7137, 0.6554, 1.2889, 1.8421, 1.9517,
0.9907, 1.0192, 1.0998, 1.3473, 1.5804, 1.4997,
1.4856, 2.4087, 3.1269, 1.6846, 1.9681, 1.9013,
2.0063, 2.2429, 4.4504, 2.5306, 2.2884, 2.2558,
2.4650, 5.0161, 2.9737, 3.2955, 3.0433, 4.9760,
3.3483, 3.2475, 3.6282, 4.9522, 4.0758, 3.5796,
6.0984, 3.8736, 6.0592, 5.8478, 3.8723, 4.3039,
6.7435, 4.4962, 5.4081, 6.5302, 4.8733, 6.5704,
4.842, 7.589, 5.2344, 7.3317
)
knn_time <- c(
04.2682, 04.5013, 06.571, 05.8672, 07.9289, 07.6253,
09.5135, 09.1288, 10.3448, 11.729, 12.4124, 13.1689,
13.8796, 14.3912, 15.3656, 16.0299, 16.553, 18.6206,
18.5721, 18.7697, 21.1235, 20.2452, 22.4805, 21.7048,
23.9975, 24.6640, 24.1858, 25.4328, 26.8170, 27.4834,
28.2759, 28.9812, 30.0044, 31.1699, 32.0367, 31.6555,
32.3268, 34.8468, 33.7590, 36.4634, 35.0449, 37.6300,
38.1448, 37.1710, 39.8298, 40.4879, 41.4895, 42.0812,
42.6466, 45.1496, 44.1108, 45.1389, 46.4636, 48.1075,
47.9914, 48.4514, 48.4674, 52.1068
)
gnb_time <- c(
0.4754, 0.4584, 0.4665, 0.4664, 0.4654, 0.4790,
0.4640, 0.4882, 0.4865, 0.4978, 0.4741, 0.4852,
0.5011, 0.5150, 0.4909, 0.5239, 0.5415, 0.6179,
0.6066, 0.6655, 0.6288, 0.6132, 0.6739, 0.5548,
0.5001, 0.5469, 0.5214, 0.5495, 0.5324, 0.5346,
0.5238, 0.5400, 0.6438, 0.6231, 0.6194, 0.5533,
0.5589, 0.5506, 0.5817, 0.6002, 0.7572, 0.7367,
0.6967, 0.8846, 0.9222, 0.8777, 0.8678, 0.7493,
0.6440, 0.6322, 0.6534, 0.6491, 0.6588, 0.6680,
0.6659, 0.6648, 0.6706, 0.6794
)
lda_time <- c(
0.1862, 1.6473, 0.1882, 0.2244, 0.223, 0.2709,
0.2105, 0.2381, 0.2632, 0.2726, 0.2896, 0.3073,
0.3339, 0.3588, 0.3524, 0.4168, 0.4302, 0.4273,
0.4271, 0.5049, 0.4700, 0.5366, 0.5157, 0.5852,
0.5694, 0.5962, 1.1273, 1.8477, 2.1616, 0.6892,
0.6794, 0.7336, 0.7524, 0.7978, 0.8319, 0.7925,
0.8841, 0.8601, 0.9127, 0.9183, 2.5774, 2.4831,
1.0113, 1.0661, 1.1097, 1.1000, 1.1252, 1.1841,
1.2263, 1.3570, 3.9993, 1.4007, 1.3090, 1.3469,
1.4059, 1.4164, 1.4388, 1.6564
)
todos_dados <- data.frame(
"bloco" = rep(blocos, 4),
"score" = c(lr_score, knn_score, gnb_score, lda_score),
"tempo" = c(lr_tempo, knn_time, gnb_time, lda_time),
"metodo" = c(
rep("LR", 58),
rep("KNN", 58),
rep("GNB", 58),
rep("LDA", 58)
)
)
#todos_dados
head(todos_dados)
library(ggplot2)
grafico1 <- ggplot(todos_dados, aes(x=bloco, y=score, color=metodo)) +
geom_line(aes(group=metodo))
grafico1
ggsave("grafico1.png", grafico1)
grafico2 <- ggplot(todos_dados, aes(x=bloco, y=tempo, color=metodo)) +
geom_line(aes(group=metodo))
grafico2
ggsave("grafico2.png", grafico2)
grafico3 <- ggplot(todos_dados, aes(x=tempo, y=score, color=metodo)) +
geom_line(aes(group=metodo))
grafico3
ggsave("grafico3.png", grafico3)
## Tentei fazer um grafico 3d mas n達o deu certo, n達o tive tempo o suficiente para tentar de outras formas.
#grafico5 <- plot_ly(todos_dados, x= ~bloco, y=~score, z =~tempo) %>% add_surface() %>% layout()
#grafico5
bloco1 <- todos_dados %>%
group_by(metodo) %>%
filter(bloco == 1)
bloco1
bloco58 <- todos_dados %>%
group_by(metodo) %>%
filter(bloco == 58)
bloco58
bloco58 <- todos_dados %>%
group_by(metodo) %>%
filter(bloco == 58)
bloco58
knitr::opts_chunk$set(echo = TRUE)
blocos <- 1:58
## scores
lr_score <- c(
0.7393, 0.8624, 0.8943, 0.9000, 0.9129, 0.9197, 0.9242,
0.9283, 0.9280, 0.9314, 0.9335, 0.9362, 0.9352, 0.9368,
0.9372, 0.9370, 0.9388, 0.9395, 0.9404, 0.9392, 0.9392,
0.9395, 0.9415, 0.9415, 0.9418, 0.9428, 0.9428, 0.9432,
0.9431, 0.9424, 0.9441, 0.9440, 0.9451, 0.9449, 0.9458,
0.9455, 0.9459, 0.9447, 0.9457, 0.9458, 0.9455, 0.9452,
0.9460, 0.9461, 0.9459, 0.9464, 0.9462, 0.9466, 0.9466,
0.9465, 0.9471, 0.9466, 0.9467, 0.9463, 0.9467, 0.9469,
0.9465, 0.9474
)
knn_score <- c(
0.7532, 0.8995, 0.9194, 0.9252, 0.9354, 0.9333, 0.9363,
0.9369, 0.9367, 0.9368, 0.9394, 0.9400, 0.9403, 0.9425,
0.9431, 0.9445, 0.9450, 0.9459, 0.9458, 0.9450, 0.9451,
0.9452, 0.9478, 0.9496, 0.9506, 0.9511, 0.9517, 0.9516,
0.9518, 0.9513, 0.9516, 0.9516, 0.9531, 0.9527, 0.9536,
0.9533, 0.9531, 0.9532, 0.9533, 0.9541, 0.9544, 0.9538,
0.9538, 0.9540, 0.9541, 0.9547, 0.9544, 0.9542, 0.9552,
0.9557, 0.9560, 0.9560, 0.9555, 0.9558, 0.9553, 0.9556,
0.9554, 0.9557
)
gnb_score <- c(
0.6558, 0.8556, 0.8691, 0.8796, 0.8971, 0.8941, 0.8958,
0.8948, 0.8958, 0.9001, 0.8988, 0.9001, 0.8984, 0.8993,
0.8995, 0.8977, 0.9017, 0.9004, 0.9018, 0.9031, 0.9078,
0.9074, 0.9097, 0.9088, 0.9097, 0.9109, 0.9109, 0.9112,
0.9112, 0.9112, 0.9109, 0.9111, 0.9115, 0.9110, 0.9118,
0.9115, 0.9105, 0.9106, 0.9109, 0.9113, 0.9106, 0.9108,
0.9109, 0.9117, 0.9119, 0.9122, 0.9125, 0.9111, 0.9115,
0.9112, 0.9121, 0.9118, 0.9120, 0.9124, 0.9120, 0.9118,
0.9119, 0.9121
)
lda_score <- c(
0.7908, 0.9055, 0.9169, 0.9182, 0.9275, 0.9295, 0.9305,
0.9325, 0.9319, 0.9316, 0.9330, 0.9338, 0.9336, 0.9343,
0.9334, 0.9335, 0.9330, 0.9339, 0.9343, 0.9341, 0.9338,
0.9334, 0.9334, 0.9336, 0.9344, 0.9349, 0.9355, 0.9349,
0.9346, 0.9345, 0.9348, 0.9350, 0.9351, 0.9352, 0.9349,
0.9355, 0.9356, 0.9358, 0.9360, 0.9357, 0.9357, 0.9358,
0.9351, 0.9353, 0.9349, 0.9350, 0.9348, 0.9352, 0.9353,
0.9358, 0.9358, 0.9361, 0.9354, 0.9359, 0.9355, 0.9359,
0.9357, 0.9354
)
## tempo
lr_tempo <- c(
0.1580, 0.2674, 0.5048, 0.397, 0.3819, 0.4371,
0.5025, 0.7137, 0.6554, 1.2889, 1.8421, 1.9517,
0.9907, 1.0192, 1.0998, 1.3473, 1.5804, 1.4997,
1.4856, 2.4087, 3.1269, 1.6846, 1.9681, 1.9013,
2.0063, 2.2429, 4.4504, 2.5306, 2.2884, 2.2558,
2.4650, 5.0161, 2.9737, 3.2955, 3.0433, 4.9760,
3.3483, 3.2475, 3.6282, 4.9522, 4.0758, 3.5796,
6.0984, 3.8736, 6.0592, 5.8478, 3.8723, 4.3039,
6.7435, 4.4962, 5.4081, 6.5302, 4.8733, 6.5704,
4.842, 7.589, 5.2344, 7.3317
)
knn_time <- c(
04.2682, 04.5013, 06.571, 05.8672, 07.9289, 07.6253,
09.5135, 09.1288, 10.3448, 11.729, 12.4124, 13.1689,
13.8796, 14.3912, 15.3656, 16.0299, 16.553, 18.6206,
18.5721, 18.7697, 21.1235, 20.2452, 22.4805, 21.7048,
23.9975, 24.6640, 24.1858, 25.4328, 26.8170, 27.4834,
28.2759, 28.9812, 30.0044, 31.1699, 32.0367, 31.6555,
32.3268, 34.8468, 33.7590, 36.4634, 35.0449, 37.6300,
38.1448, 37.1710, 39.8298, 40.4879, 41.4895, 42.0812,
42.6466, 45.1496, 44.1108, 45.1389, 46.4636, 48.1075,
47.9914, 48.4514, 48.4674, 52.1068
)
gnb_time <- c(
0.4754, 0.4584, 0.4665, 0.4664, 0.4654, 0.4790,
0.4640, 0.4882, 0.4865, 0.4978, 0.4741, 0.4852,
0.5011, 0.5150, 0.4909, 0.5239, 0.5415, 0.6179,
0.6066, 0.6655, 0.6288, 0.6132, 0.6739, 0.5548,
0.5001, 0.5469, 0.5214, 0.5495, 0.5324, 0.5346,
0.5238, 0.5400, 0.6438, 0.6231, 0.6194, 0.5533,
0.5589, 0.5506, 0.5817, 0.6002, 0.7572, 0.7367,
0.6967, 0.8846, 0.9222, 0.8777, 0.8678, 0.7493,
0.6440, 0.6322, 0.6534, 0.6491, 0.6588, 0.6680,
0.6659, 0.6648, 0.6706, 0.6794
)
lda_time <- c(
0.1862, 1.6473, 0.1882, 0.2244, 0.223, 0.2709,
0.2105, 0.2381, 0.2632, 0.2726, 0.2896, 0.3073,
0.3339, 0.3588, 0.3524, 0.4168, 0.4302, 0.4273,
0.4271, 0.5049, 0.4700, 0.5366, 0.5157, 0.5852,
0.5694, 0.5962, 1.1273, 1.8477, 2.1616, 0.6892,
0.6794, 0.7336, 0.7524, 0.7978, 0.8319, 0.7925,
0.8841, 0.8601, 0.9127, 0.9183, 2.5774, 2.4831,
1.0113, 1.0661, 1.1097, 1.1000, 1.1252, 1.1841,
1.2263, 1.3570, 3.9993, 1.4007, 1.3090, 1.3469,
1.4059, 1.4164, 1.4388, 1.6564
)
todos_dados <- data.frame(
"bloco" = rep(blocos, 4),
"score" = c(lr_score, knn_score, gnb_score, lda_score),
"tempo" = c(lr_tempo, knn_time, gnb_time, lda_time),
"metodo" = c(
rep("LR", 58),
rep("KNN", 58),
rep("GNB", 58),
rep("LDA", 58)
)
)
#todos_dados
head(todos_dados)
library(ggplot2)
grafico1 <- ggplot(todos_dados, aes(x=bloco, y=score, color=metodo)) +
geom_line(aes(group=metodo))
grafico1
ggsave("grafico1.png", grafico1)
grafico2 <- ggplot(todos_dados, aes(x=bloco, y=tempo, color=metodo)) +
geom_line(aes(group=metodo))
grafico2
ggsave("grafico2.png", grafico2)
grafico3 <- ggplot(todos_dados, aes(x=tempo, y=score, color=metodo)) +
geom_line(aes(group=metodo))
grafico3
ggsave("grafico3.png", grafico3)
## Tentei fazer um grafico 3d mas n達o deu certo, n達o tive tempo o suficiente para tentar de outras formas.
#grafico5 <- plot_ly(todos_dados, x= ~bloco, y=~score, z =~tempo) %>% add_surface() %>% layout()
#grafico5
bloco1 <- todos_dados %>%
group_by(metodo) %>%
filter(bloco == 1)
bloco1 <- todos_dados %>%
group_by(metodo) %>%
filter(bloco == 1)
bloco1 <- todos_dados %>%
group_by(metodo) %>%
filter(bloco == 1)
library(plotly)
library(ggplot2)
library(tidyverse)
library(purrr)
tidyverse_conflicts(only = NULL)
bloco1 <- filter(.data = bloco1, bloco == 1)
bloco1 <- group_by(.data = todos_dados, metodo)
bloco1 <- filter(.data = bloco1, bloco == 1)
bloco1
detach("package:dplyr", unload = TRUE)
library(dplyr)
# bloco1 <- todos_dados %>%
#   group_by(metodo) %>%
#   filter(bloco == 1)
#
# bloco1
bloco1 <- group_by(.data = todos_dados, metodo)
bloco1 <- filter(.data = bloco1, bloco == 1)
bloco1
require(dplyr)
# bloco1 <- todos_dados %>%
#   group_by(metodo) %>%
#   filter(bloco == 1)
#
# bloco1
bloco1 <- group_by(.data = todos_dados, metodo)
bloco1 <- filter(.data = bloco1, bloco == 1)
bloco1
knitr::opts_chunk$set(echo = TRUE)
require(RMySQL)
library(RMySQL)
install.packages("DiagrammerR")
library(DiagrammerR)
library(DiagrammerR)
library(DiagrammeR)
install.packages("DiagrammeR")
library(DiagrammeR)
mermaid(diagram = '
sequenceDiagram
participant Alice
participant Bob
Alice->>John: Hello John, how are you?
loop Healthcheck
John->>John: Fight against hypochondria
end
Note right of John: Rational thoughts<br/>prevail...
John-->>Alice: Great!
John->>Bob: How about you?
Bob-->>John: Jolly good!
')
mermaid(diagram = '
graph TD;
A-->B;
A-->C;
B-->D;
C-->D;
')
mermaid(diagram = 'graph TD;
((A))-->((B));
A-->C;
B-->D;
C-->D;
')
mermaid(diagram = 'graph TD;
(A)-->(B);
A-->C;
B-->D;
C-->D;
')
mermaid(diagram = 'graph TD;
((A))-->((B));
((A))-->((C));
((B))-->((D));
((C))-->((D));
')
mermaid(diagram = 'graph TD;
((A))->((B));
((A))->((C));
((B))->((D));
((C))->((D));
')
mermaid(diagram = 'graph TD;
((A))->((B));
((A))->((C));
((B))->((D));
((C))->((D));
')
a_graph <-
create_graph() %>%
add_node() %>%
add_node() %>%
add_edge(from = 1, to = 2)
a_graph
render_graph(a_graph, layout = "nicely")
add_edge(from = 2, to = 3)
render_graph(a_graph, layout = "nicely")
a_graph <-
create_graph() %>%
add_node() %>%
add_node() %>%
add_node() %>%
add_edge(from = 1, to = 2)
a_graph <-
create_graph() %>%
add_node() %>%
add_node() %>%
add_node() %>%
add_edge(from = 1, to = 2) %>%
add_edge(from = 2, to = 3)
render_graph(a_graph, layout = "nicely")
a_graph <-
create_graph() %>%
add_node() %>%
add_node() %>%
add_node() %>%
add_edge(from = "A", to = "B") %>%
add_edge(from = "B", to = "C")
a_graph <-
create_graph() %>%
add_node(A) %>%
add_node() %>%
add_node() %>%
add_edge(from = A, to = 2) %>%
add_edge(from = 2, to = 3)
a_graph <-
create_graph() %>%
add_node(A) %>%
add_node() %>%
add_node() %>%
add_edge(from = 1, to = 2) %>%
add_edge(from = 2, to = 3)
render_graph(a_graph, layout = "nicely")
a_graph <-
create_graph() %>%
add_node("A") %>%
add_node() %>%
add_node() %>%
add_edge(from = 1, to = 2) %>%
add_edge(from = 2, to = 3)
render_graph(a_graph, layout = "nicely")
a_graph <-
create_graph() %>%
add_node(label = "A") %>%
add_node() %>%
add_node() %>%
add_edge(from = 1, to = 2) %>%
add_edge(from = 2, to = 3)
render_graph(a_graph, layout = "nicely")
a_graph <-
create_graph() %>%
add_node(label = "A") %>%
add_node(label = "B") %>%
add_node(label = "C") %>%
add_edge(from = 1, to = 2) %>%
add_edge(from = 2, to = 3)
render_graph(a_graph, layout = "nicely")
b_graph <-
create_graph() %>% add_path(n = 3)
render_graph(a_graph, layout = "nicely")
b_graph <-
create_graph() %>% add_path(n = 3)
render_graph(b_graph, layout = "nicely")
render_graph(b_graph, layout = "circle")
render_graph(b_graph, layout = "tree")
render_graph(b_graph, layout = "kk")
render_graph(b_graph, layout = "fr")
b_graph <-
create_graph() %>% add_path(n = 3)
render_graph(b_graph, layout = "tree")
render_graph(b_graph, layout = "tree", title = "Diagrama B")
render_graph(b_graph, layout = "tree", title = "Diagrama B", width = 1)
render_graph(b_graph, layout = "tree", title = "Diagrama B", width = 10)
render_graph(b_graph, layout = "tree", title = "Diagrama B", width = 100)
render_graph(b_graph, layout = "tree", title = "Diagrama B", width = 300)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
library(ggplot2)
library(ggh4x)
library(datasets) #dados para testes
mermaid(diagram = 'graph TD;
A-->B;
A-->C;
B-->D;
C-->D;
')
library(DiagrammeR)
mermaid(diagram = '
flowchart LR
id1[This is the text in the box]
')
library(DiagrammeR)
mermaid(diagram = '
flowchart LR;
id1[This is the text in the box];
')
mermaid(diagram = "flowchart LR;
id1[This is the text in the box];")
mermaid(diagram = 'flowchart LR;
id1["Texto"];')
library(DiagrammeR)
mermaid(diagram = 'graph LR;
id1["Texto"];')
library(DiagrammeR)
mermaid(diagram = 'graph LR;
id1(("Texto"));')
library(DiagrammeR)
mermaid(diagram = 'graph TD;
A(("A"))-->B;
B-->D;
C-->D;
')
mermaid(diagram = 'graph TD;
A(("A"))-->B(("B" )) --> C(("C"));')
library(DiagrammeR)
mermaid(diagram = 'graph TD;
A(("A"))-->B(("B" ));
B --> C(("C"));')
library(DiagrammeR)
mermaid(diagram = 'graph LR;
A(("A"))-->B(("B" ));
B --> C(("C"));')
n = 10
x = 2
a = 1
b = 2
theta < -  seq(0,1, length.out=1000)
n = 10
x = 2
a = 1
b = 2
theta <-  seq(0,1, length.out=1000)
plot(theta, dbeta(theta, a ,b), type = "l")
a = 1
b = 0.2
plot(theta, dbeta(theta, a ,b), type = "l")
a = 2
b = 2
theta <-  seq(0,1, length.out=1000)
plot(theta, dbeta(theta, a ,b), type = "l", ylim = c(0,5))
lines(theta, dbeta(theta, a+x, b+n-x), col = "red", lwd =2)
a = 2
b = 2
theta <-  seq(0,1, length.out=1000)
plot(theta, dbeta(theta, a ,b), type = "l", ylim = c(0,5))
lines(theta,
dbeta(theta, a+x, b+n-x),
col = "red", lwd =2)
install.packages("gRain")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Rgraphviz")
